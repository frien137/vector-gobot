/*
 * Generated by gdbus-codegen 2.48.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __DBUS_WPAS_H__
#define __DBUS_WPAS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for fi.w1.wpa_supplicant1 */

#define TYPE_FI_W1_WPA_SUPPLICANT1 (fi_w1_wpa_supplicant1_get_type ())
#define FI_W1_WPA_SUPPLICANT1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_FI_W1_WPA_SUPPLICANT1, FiW1Wpa_supplicant1))
#define IS_FI_W1_WPA_SUPPLICANT1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_FI_W1_WPA_SUPPLICANT1))
#define FI_W1_WPA_SUPPLICANT1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_FI_W1_WPA_SUPPLICANT1, FiW1Wpa_supplicant1Iface))

struct _FiW1Wpa_supplicant1;
typedef struct _FiW1Wpa_supplicant1 FiW1Wpa_supplicant1;
typedef struct _FiW1Wpa_supplicant1Iface FiW1Wpa_supplicant1Iface;

struct _FiW1Wpa_supplicant1Iface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get_interface) (
    FiW1Wpa_supplicant1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_interface);

};

GType fi_w1_wpa_supplicant1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *fi_w1_wpa_supplicant1_interface_info (void);
guint fi_w1_wpa_supplicant1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void fi_w1_wpa_supplicant1_complete_get_interface (
    FiW1Wpa_supplicant1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *path);



/* D-Bus method calls: */
void fi_w1_wpa_supplicant1_call_get_interface (
    FiW1Wpa_supplicant1 *proxy,
    const gchar *arg_interface,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean fi_w1_wpa_supplicant1_call_get_interface_finish (
    FiW1Wpa_supplicant1 *proxy,
    gchar **out_path,
    GAsyncResult *res,
    GError **error);

gboolean fi_w1_wpa_supplicant1_call_get_interface_sync (
    FiW1Wpa_supplicant1 *proxy,
    const gchar *arg_interface,
    gchar **out_path,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_FI_W1_WPA_SUPPLICANT1_PROXY (fi_w1_wpa_supplicant1_proxy_get_type ())
#define FI_W1_WPA_SUPPLICANT1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_FI_W1_WPA_SUPPLICANT1_PROXY, FiW1Wpa_supplicant1Proxy))
#define FI_W1_WPA_SUPPLICANT1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_FI_W1_WPA_SUPPLICANT1_PROXY, FiW1Wpa_supplicant1ProxyClass))
#define FI_W1_WPA_SUPPLICANT1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_FI_W1_WPA_SUPPLICANT1_PROXY, FiW1Wpa_supplicant1ProxyClass))
#define IS_FI_W1_WPA_SUPPLICANT1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_FI_W1_WPA_SUPPLICANT1_PROXY))
#define IS_FI_W1_WPA_SUPPLICANT1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_FI_W1_WPA_SUPPLICANT1_PROXY))

typedef struct _FiW1Wpa_supplicant1Proxy FiW1Wpa_supplicant1Proxy;
typedef struct _FiW1Wpa_supplicant1ProxyClass FiW1Wpa_supplicant1ProxyClass;
typedef struct _FiW1Wpa_supplicant1ProxyPrivate FiW1Wpa_supplicant1ProxyPrivate;

struct _FiW1Wpa_supplicant1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  FiW1Wpa_supplicant1ProxyPrivate *priv;
};

struct _FiW1Wpa_supplicant1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType fi_w1_wpa_supplicant1_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (FiW1Wpa_supplicant1Proxy, g_object_unref)
#endif

void fi_w1_wpa_supplicant1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
FiW1Wpa_supplicant1 *fi_w1_wpa_supplicant1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
FiW1Wpa_supplicant1 *fi_w1_wpa_supplicant1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void fi_w1_wpa_supplicant1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
FiW1Wpa_supplicant1 *fi_w1_wpa_supplicant1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
FiW1Wpa_supplicant1 *fi_w1_wpa_supplicant1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_FI_W1_WPA_SUPPLICANT1_SKELETON (fi_w1_wpa_supplicant1_skeleton_get_type ())
#define FI_W1_WPA_SUPPLICANT1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_FI_W1_WPA_SUPPLICANT1_SKELETON, FiW1Wpa_supplicant1Skeleton))
#define FI_W1_WPA_SUPPLICANT1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_FI_W1_WPA_SUPPLICANT1_SKELETON, FiW1Wpa_supplicant1SkeletonClass))
#define FI_W1_WPA_SUPPLICANT1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_FI_W1_WPA_SUPPLICANT1_SKELETON, FiW1Wpa_supplicant1SkeletonClass))
#define IS_FI_W1_WPA_SUPPLICANT1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_FI_W1_WPA_SUPPLICANT1_SKELETON))
#define IS_FI_W1_WPA_SUPPLICANT1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_FI_W1_WPA_SUPPLICANT1_SKELETON))

typedef struct _FiW1Wpa_supplicant1Skeleton FiW1Wpa_supplicant1Skeleton;
typedef struct _FiW1Wpa_supplicant1SkeletonClass FiW1Wpa_supplicant1SkeletonClass;
typedef struct _FiW1Wpa_supplicant1SkeletonPrivate FiW1Wpa_supplicant1SkeletonPrivate;

struct _FiW1Wpa_supplicant1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  FiW1Wpa_supplicant1SkeletonPrivate *priv;
};

struct _FiW1Wpa_supplicant1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType fi_w1_wpa_supplicant1_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (FiW1Wpa_supplicant1Skeleton, g_object_unref)
#endif

FiW1Wpa_supplicant1 *fi_w1_wpa_supplicant1_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for fi.w1.wpa_supplicant1.Outerface */

#define TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE (fi_w1_wpa_supplicant1_outerface_get_type ())
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE, FiW1Wpa_supplicant1Outerface))
#define IS_FI_W1_WPA_SUPPLICANT1_OUTERFACE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE))
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE, FiW1Wpa_supplicant1OuterfaceIface))

struct _FiW1Wpa_supplicant1Outerface;
typedef struct _FiW1Wpa_supplicant1Outerface FiW1Wpa_supplicant1Outerface;
typedef struct _FiW1Wpa_supplicant1OuterfaceIface FiW1Wpa_supplicant1OuterfaceIface;

struct _FiW1Wpa_supplicant1OuterfaceIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_scan) (
    FiW1Wpa_supplicant1Outerface *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_args);

};

GType fi_w1_wpa_supplicant1_outerface_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *fi_w1_wpa_supplicant1_outerface_interface_info (void);
guint fi_w1_wpa_supplicant1_outerface_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void fi_w1_wpa_supplicant1_outerface_complete_scan (
    FiW1Wpa_supplicant1Outerface *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void fi_w1_wpa_supplicant1_outerface_call_scan (
    FiW1Wpa_supplicant1Outerface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean fi_w1_wpa_supplicant1_outerface_call_scan_finish (
    FiW1Wpa_supplicant1Outerface *proxy,
    GAsyncResult *res,
    GError **error);

gboolean fi_w1_wpa_supplicant1_outerface_call_scan_sync (
    FiW1Wpa_supplicant1Outerface *proxy,
    GVariant *arg_args,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY (fi_w1_wpa_supplicant1_outerface_proxy_get_type ())
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY, FiW1Wpa_supplicant1OuterfaceProxy))
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY, FiW1Wpa_supplicant1OuterfaceProxyClass))
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY, FiW1Wpa_supplicant1OuterfaceProxyClass))
#define IS_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY))
#define IS_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_PROXY))

typedef struct _FiW1Wpa_supplicant1OuterfaceProxy FiW1Wpa_supplicant1OuterfaceProxy;
typedef struct _FiW1Wpa_supplicant1OuterfaceProxyClass FiW1Wpa_supplicant1OuterfaceProxyClass;
typedef struct _FiW1Wpa_supplicant1OuterfaceProxyPrivate FiW1Wpa_supplicant1OuterfaceProxyPrivate;

struct _FiW1Wpa_supplicant1OuterfaceProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  FiW1Wpa_supplicant1OuterfaceProxyPrivate *priv;
};

struct _FiW1Wpa_supplicant1OuterfaceProxyClass
{
  GDBusProxyClass parent_class;
};

GType fi_w1_wpa_supplicant1_outerface_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (FiW1Wpa_supplicant1OuterfaceProxy, g_object_unref)
#endif

void fi_w1_wpa_supplicant1_outerface_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
FiW1Wpa_supplicant1Outerface *fi_w1_wpa_supplicant1_outerface_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
FiW1Wpa_supplicant1Outerface *fi_w1_wpa_supplicant1_outerface_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void fi_w1_wpa_supplicant1_outerface_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
FiW1Wpa_supplicant1Outerface *fi_w1_wpa_supplicant1_outerface_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
FiW1Wpa_supplicant1Outerface *fi_w1_wpa_supplicant1_outerface_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON (fi_w1_wpa_supplicant1_outerface_skeleton_get_type ())
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON, FiW1Wpa_supplicant1OuterfaceSkeleton))
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON, FiW1Wpa_supplicant1OuterfaceSkeletonClass))
#define FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON, FiW1Wpa_supplicant1OuterfaceSkeletonClass))
#define IS_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON))
#define IS_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_FI_W1_WPA_SUPPLICANT1_OUTERFACE_SKELETON))

typedef struct _FiW1Wpa_supplicant1OuterfaceSkeleton FiW1Wpa_supplicant1OuterfaceSkeleton;
typedef struct _FiW1Wpa_supplicant1OuterfaceSkeletonClass FiW1Wpa_supplicant1OuterfaceSkeletonClass;
typedef struct _FiW1Wpa_supplicant1OuterfaceSkeletonPrivate FiW1Wpa_supplicant1OuterfaceSkeletonPrivate;

struct _FiW1Wpa_supplicant1OuterfaceSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  FiW1Wpa_supplicant1OuterfaceSkeletonPrivate *priv;
};

struct _FiW1Wpa_supplicant1OuterfaceSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType fi_w1_wpa_supplicant1_outerface_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (FiW1Wpa_supplicant1OuterfaceSkeleton, g_object_unref)
#endif

FiW1Wpa_supplicant1Outerface *fi_w1_wpa_supplicant1_outerface_skeleton_new (void);


G_END_DECLS

#endif /* __DBUS_WPAS_H__ */
